package com.badahori.creatures.plugins.intellij.agenteering.sprites.editor;

import com.badahori.creatures.plugins.intellij.agenteering.sprites.sprite.SpriteParser;
import com.intellij.openapi.ui.ComboBox;
import com.intellij.openapi.vfs.VirtualFile;
import com.intellij.ui.JBColor;
import com.intellij.ui.components.JBList;

import javax.swing.*;
import java.awt.*;
import java.awt.image.BufferedImage;
import java.util.List;
import java.util.Objects;

public class SprFileEditor {
    private JPanel main;
    private JList<Image> imageList;
    private JComboBox<String> backgroundColor;
    private JComboBox<String> scale;
    @SuppressWarnings({
            "FieldCanBeLocal",
            "unused"
    })
    private final VirtualFile virtualFile;
    private final List<BufferedImage> images;
    public static final String TRANSPARENT = "Transparent";
    public static final String BLACK = "Black";
    public static final String LIGHT_GREY = "Light Grey";
    public static final String DARK_GREY = "Dark Grey";
    public static final String WHITE = "White";
    public static final String RED = "Red";
    public static final String BLUE = "Blue";
    public static final String GREEN = "Green";
    private static final JBColor TRANSPARENT_COLOR = new JBColor(new Color(0, 0, 0, 0), new Color(0, 0, 0, 0));
    private final SpriteCellRenderer cellRenderer = new SpriteCellRenderer();


    SprFileEditor(VirtualFile file) {
        this.virtualFile = file;
        this.images = SpriteParser.parse(file).getImages();
        $$$setupUI$$$();
        backgroundColor.addItemListener((itemEvent) -> {
            final String color = (String) itemEvent.getItem();
            switch (color) {
                case TRANSPARENT:
                    cellRenderer.setColor(TRANSPARENT_COLOR);
                    break;
                case BLACK:
                    cellRenderer.setColor(JBColor.BLACK);
                    break;
                case DARK_GREY:
                    cellRenderer.setColor(JBColor.DARK_GRAY);
                    break;
                case WHITE:
                    cellRenderer.setColor(JBColor.WHITE);
                    break;

                case LIGHT_GREY:
                    cellRenderer.setColor(JBColor.LIGHT_GRAY);
                    break;
                case RED:
                    cellRenderer.setColor(JBColor.RED);
                    break;
                case BLUE:
                    cellRenderer.setColor(JBColor.BLUE);
                    break;
                case GREEN:
                    cellRenderer.setColor(JBColor.GREEN);
                    break;
            }
            imageList.updateUI();
        });
        imageList.updateUI();
        scale.addItemListener((e) -> {
            final String value = (String) Objects.requireNonNull(scale.getSelectedItem());
            final float newScale = Float.parseFloat(value.substring(0, value.length() - 1));
            cellRenderer.setScale(newScale);
            imageList.updateUI();
        });
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        main = new JPanel();
        main.setLayout(new BorderLayout(10, 0));
        final JScrollPane scrollPane1 = new JScrollPane();
        main.add(scrollPane1, BorderLayout.CENTER);
        scrollPane1.setViewportView(imageList);
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new FlowLayout(FlowLayout.RIGHT, 5, 5));
        main.add(panel1, BorderLayout.NORTH);
        final JLabel label1 = new JLabel();
        label1.setText("Background Color");
        panel1.add(label1);
        panel1.add(backgroundColor);
        final JLabel label2 = new JLabel();
        label2.setText("Scale");
        panel1.add(label2);
        panel1.add(scale);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return main;
    }

    private void createUIComponents() {
        imageList = new JBList<>(images);
        imageList.setCellRenderer(cellRenderer);
        backgroundColor = new ComboBox<>(new String[]{
                TRANSPARENT,
                BLACK,
                WHITE,
                DARK_GREY,
                LIGHT_GREY,
                RED,
                GREEN,
                BLUE
        });
        scale = new ComboBox<>(new String[]{
                "1x",
                "1.25x",
                "1.5x",
                "2x",
                "2.5x",
                "3x",
                "4x",
                "5x"
        });

    }
}
