{
	parserClass="com.openc2e.plugins.intellij.caos.def.parser.CaosDefParser"
	implements="com.openc2e.plugins.intellij.caos.def.psi.api.CaosDefCompositeElement"
	extends="com.openc2e.plugins.intellij.caos.def.psi.impl.CaosDefCompositeElementImpl"
	elementTypeHolderClass="com.openc2e.plugins.intellij.caos.def.lexer.CaosDefTypes"
	elementTypePrefix="CaosDef_"
	elementTypeClass="com.openc2e.plugins.intellij.caos.def.psi.types.CaosDefElementType"
	tokenTypeClass="com.openc2e.plugins.intellij.caos.def.lexer.CaosDefTokenType"
	psiClassPrefix="CaosDef"
	psiImplClassSuffix="Impl"
	psiPackage="com.openc2e.plugins.intellij.caos.def.psi.api"
	psiImplPackage="com.openc2e.plugins.intellij.caos.def.psi.impl"
	elementTypeFactory("comment|tagLine")="com.openc2e.plugins.intellij.caos.def.psi.CaosDefElementTypeFactory.factory"
	psiImplUtilClass="com.openc2e.plugins.intellij.caos.def.parser.CaosDefParserUtil"
	tokens = [
		ID = "regexp:[_a-zA-Z][_a-zA-Z0-9!#]*";
		COLON = ':';
		PLUS = "+";
		space = "regexp:[ ]";
		OPEN_BRACKET = '[';
		CLOSE_BRACKET = ']';
		NEWLINE = "regexp:\n";
		ENDM = "regexp:[eE][nN][dD][mM]"
		SUBR = "regexp:[sS][uU][bB][rR]"
		GSUB = "regexp:[gG][sS][uU][bB]"
		REPS = "regexp:[rR][eE][pP][sS]"
		REPE = "regexp:[rR][eE][pP][eE]"
		LOOP = "regexp:[lL][oO][oO][pP]"
		UNTL = "regexp:[uU][nN][tT][lL]"
		EVER = "regexp:[eE][vV][eE][rR]"
		ENUM = "regexp:[eE][nN][uU][mM]"
		NEXT = "regexp:[nN][eE][xX][tT]"
		DOIF = "regexp:[dD][oO][iI][fF]"
		ELSE = "regexp:[eE][lL][sS][eE]"
		ENDI = "regexp:[eE][nN][dD][iI]"
		COMMA = ',';
		TEXT = 'regexp:\[[^\]]*\]';
	]
}

def	::= (!<<eof>> coas_element)*
	;


caos_element
	::= control_statement
	|   command
	;



control_statement
    ::=
    ;
command
    ::= (namespace ':') com expr* lineTerminator
    ;

lineTerminator
    ::= <<eol>>
    |   ","
    |   NEWLINE
    ;
