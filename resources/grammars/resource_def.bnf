{
	parserClass="com.badahori.creatures.plugins.intellij.agenteering.compiler.def.parser.AgentCompilerDefParser"
	implements="com.badahori.creatures.plugins.intellij.agenteering.compiler.def.parser.psi.api.CompilerDefCompositeElement"
	extends="com.badahori.creatures.plugins.intellij.agenteering.compiler.def.parser.psi.impl.CompilerDefCompositeElementImpl"
	elementTypeHolderClass="com.badahori.creatures.agenteering.plugins.intellij.cobs.lexer.CompilerDefTypes"
	elementTypePrefix="SprDef_"
	elementTypeClass="com.badahori.creatures.plugins.intellij.agenteering.compiler.def.parser.psi.types.CompilerDefElementType"
	tokenTypeClass="com.badahori.creatures.plugins.intellij.agenteering.compiler.def.parser.lexer.CompilerDefTokenType"
	psiClassPrefix="SprDef"
	psiImplClassSuffix="Impl"
	psiPackage="com.badahori.creatures.plugins.intellij.agenteering.compiler.def.parser.psi.api"
	psiImplPackage="com.badahori.creatures.plugins.intellij.agenteering.compiler.def.parser.psi.impl"
	//elementTypeFactory("pray_file_def|cob_file_def|spr_file_def")="com.badahori.creatures.plugins.intellij.agenteering.compiler.def.parser.psi.types.CobDefElementTypeFactory.factory"
	psiImplUtilClass="com.badahori.creatures.plugins.intellij.agenteering.compiler.def.parser.util.CompilerDefPsiImplUtil"
	generateTokenAccessors=true
	tokens = [
		COB_TAG = "regexp:[@][Cc][Oo][Bb]"
		SPR_TAG = "regexp:[@][Ss][Pp][Rr]([Ii][Tt][Ee])?";
		PRAY_TAG = "regexp:[@][Pp][Rr][Aa][Yy]"
		INSTALL_SCRIPT_TAG = "regexp:[#][Ii][Nn][Ss][Tt]([Aa][Ll][Ll])?";
		REMOVAL_SCRIPT_TAG = "regexp:[#]([Rr][Ee][Mm]([Oo][Vv][Aa][Ll])?|[Uu][Nn][Ii][Nn][Ss][Tt][Aa][Ll][Ll]|[Rr][Ss][Cc][Rr])?";
		SCRIPT_TAG = "regexp:[#][Ss][Cc][Rr]([Ii][Pp][Tt][Ss]|[Pp])?";
		TOKEN = "regexp:[a-zA-Z0-9_][a-zA-Z0-9_][a-zA-Z0-9_][a-zA-Z0-9_]";
		END = "regexp:[#][Ee][Nn][Dd]";
		INT = "regexp:[0-9]+";
		space = "regexp:[ ]";
		MODULE_FILE_ROOT = "regexp:[Mm][Oo][Dd]([Uu][Ll][Ee])?";
		PROJECT_FILE_ROOT = "regexp:[Pp][Rr][Oo][Jj]([Ee][Cc][Tt])?";
		PICTURE_TAG = "regexp:[Pp][Ii][Cc][Tt][Uu][Rr][Ee]";
		QUANTITY_TAG = "regexp:[Qq][Tt][Yy]|[Qq][Uu][Aa][Nn][Tt][Ii][Tt][Yy]"
		EXPIRATION_TAG = "regexp:[#][Ee][Xx][Pp]([Ii][Rr][Aa][Tt][Ii][Oo][Nn])?"
		DEPENDENCIES = "regexp:[#]([Ff][Ii][Ll][Ee][Ss]|[Ii][Nn][Cc][Ll][Uu][Dd][Ee][Ss]?)"
		PATH_COMPONENT_PART = "regexp:[^/]+"
		ID = "regexp:[A-Za-z0-9_]+"
		COLON = ":";
		EQ = "="
		OPEN_PAREN = "("
		CLOSE_PARENT = ")"
		DIRECTORY_LOCAL = "./";
		NEWLINE = "\n";
		FILE_PATH = "regexp:[^\n]"
		PATH = "regexp:[!.]?[/][^\n]+"
		PIPE = "|"
		COMMA = ","
	]
}


resource
	::= (!<<eof>> a_resource)?
	;

private a_resource
	::= cob_def
	|	sprite_def
	|	pray_def
	;

cob_def
	::= COB_TAG "(" variant")" ("=" file_name)? (NEWLINE cob_file_elements?)?
	{
		pin=1
		implements = [
			"com.badahori.creatures.plugins.intellij.agenteering.compiler.def.parser.psi.api.HasFile"
		]
		methods = [
			getFiles
			allFilesExist
			missingFiles
		]
	}
	;

private cob_file_elements
	::= cob_file_element+
	;

private cob_file_element
	::= inst_script_def
	|	script_def
	|	removal_script_def
	;

pray_def
	::= PRAY_TAG "(" pray_type_literal? ")" ("=" file_name)? (NEWLINE pray_file_elements?)?
	{
		pin=1
		implements = [
			"com.badahori.creatures.plugins.intellij.agenteering.compiler.def.parser.psi.api.HasFile"
		]
		methods = [
			getFiles
			allFilesExist
			missingFiles
		]
	}
	;

private pray_file_elements
	::= pray_file_element+
	;

private pray_file_element
	::= inst_script_def
	|	script_def
	|	removal_script_def
	;

sprite_def
	::= SPR_DEF_TAG ("(" sprite_type_literal ")")? ("=" file_name)? files? (NEWLINE END?)?
	{
		pin=1
		implements = [
			"com.badahori.creatures.plugins.intellij.agenteering.compiler.def.parser.psi.api.HasFile"
		]
		methods = [
			getFiles
			allFilesExist
			missingFiles
		]
	}
	;

script_def
	::= SCRIPT_TAG NEWLINE files? (NEWLINE END)?
	{
		pin=1
		implements = [
			"com.badahori.creatures.plugins.intellij.agenteering.compiler.def.parser.psi.api.HasFile"
		]
		methods = [
			getFiles
			allFilesExist
			missingFiles
		]
	}
	;

inst_script_def
	::= INSTALL_SCRIPT_TAG "=" file_name (NEWLINE END)?
	|	INSTALL_SCRIPT_TAG files? (NEWLINE END)?
	{
		pin=1
		implements = [
			"com.badahori.creatures.plugins.intellij.agenteering.compiler.def.parser.psi.api.HasFile"
		]
		methods = [
			getFiles
			allFilesExist
			missingFiles
		]
	}
	;

removal_script_def
	::= REMOVAL_SCRIPT_TAG "=" file_name (NEWLINE END)?
	;

private files
	::= (NEWLINE file)+
	;

file
	::= project_file
	|	module_file
	|	local_file
	{
		methods = [
			resolveToFile
		]
	}
	;

project_file
	::= PROJECT_FILE_ROOT file_path
	{
		pin=1
		implements = [
			"com.badahori.creatures.plugins.intellij.agenteering.compiler.def.parser.psi.api.CobFile"
		]
	}
	;

module_file
	::= MODULE_FILE_ROOT file_path
	{
		pin=1
		implements = [
			"com.badahori.creatures.plugins.intellij.agenteering.compiler.def.parser.psi.api.CobFile"
		]
	}
	;

local_file
	::= file_path
	{
		pin=1
		implements = [
			"com.badahori.creatures.plugins.intellij.agenteering.compiler.def.parser.psi.api.CobFile"
		]
	}
	;

file_path
	::= path_component ("/" file_name)?
	;

path_component
	::= PATH_COMPONENT_PART "/"?
	;

file_name
	::= PATH_COMPONENT_PART ("." ID)
	;

variant
	::= ID
	;

sprite_type_literal
	::= ID
	;

pray_type_literal
	::= ID
	;
